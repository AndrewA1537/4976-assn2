@page "/ContactList/Create"
@using NonProfitLibrary
@using Services
@inject ContactListService contactListService
@inject NavigationManager NavigationManager

<h1>Create</h1>

<h4>ContactList</h4>

<hr />

<div class="row">
    <div class="col-md-4">

        <EditForm Model="newContact" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="FirstName">First Name</label>
                <InputText id="FirstName" @bind-Value="newContact.FirstName" class="form-control" />
                <ValidationMessage For="@(() => newContact.FirstName)" />
            </div>

            <div class="form-group">
                <label for="LastName">Last Name</label>
                <InputText id="LastName" @bind-Value="newContact.LastName" class="form-control" />
                <ValidationMessage For="@(() => newContact.LastName)" />
            </div>

            <div class="form-group">
                <label for="Email">Email</label>
                <InputText id="Email" @bind-Value="newContact.Email" class="form-control" />
                <ValidationMessage For="@(() => newContact.Email)" />
            </div>

            <div class="form-group">
                <label for="Street">Street</label>
                <InputText id="Street" @bind-Value="newContact.Street" class="form-control" />
                <ValidationMessage For="@(() => newContact.Street)" />
            </div>

            <div class="form-group">
                <label for="City">City</label>
                <InputText id="City" @bind-Value="newContact.City" class="form-control" />
                <ValidationMessage For="@(() => newContact.City)" />
            </div>

            <div class="form-group">
                <label for="PostalCode">Postal Code</label>
                <InputText id="PostalCode" @bind-Value="newContact.PostalCode" class="form-control" />
                <ValidationMessage For="@(() => newContact.PostalCode)" />
            </div>

            <div class="form-group">
                <label for="Country">Country</label>
                <InputText id="Country" @bind-Value="newContact.Country" class="form-control" />
                <ValidationMessage For="@(() => newContact.Country)" />
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </EditForm>

    </div>
</div>

<div>
    <a href="/ContactList/Index" class="btn btn-secondary">Back to List</a>
</div>

@code
{
    private ContactList newContact = new ContactList();

    private async Task HandleValidSubmit()
    {
        await contactListService.InsertContactAsync(newContact);
        // Navigate to the list page after successfully adding the contact
        NavigationManager.NavigateTo("/ContactList/Index");
    }
}
